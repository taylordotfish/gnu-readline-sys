//! Generated from readline-8.2.
use super::*;

/* automatically generated by rust-bindgen 0.68.1 */

pub const RL_READLINE_VERSION: u32 = 2050;
pub const RL_VERSION_MAJOR: u32 = 8;
pub const RL_VERSION_MINOR: u32 = 2;
pub const READERR: i32 = -2;
pub const RL_PROMPT_START_IGNORE: u8 = 1u8;
pub const RL_PROMPT_END_IGNORE: u8 = 2u8;
pub const NO_MATCH: u32 = 0;
pub const SINGLE_MATCH: u32 = 1;
pub const MULT_MATCH: u32 = 2;
pub const RL_STATE_NONE: u32 = 0;
pub const RL_STATE_INITIALIZING: u32 = 1;
pub const RL_STATE_INITIALIZED: u32 = 2;
pub const RL_STATE_TERMPREPPED: u32 = 4;
pub const RL_STATE_READCMD: u32 = 8;
pub const RL_STATE_METANEXT: u32 = 16;
pub const RL_STATE_DISPATCHING: u32 = 32;
pub const RL_STATE_MOREINPUT: u32 = 64;
pub const RL_STATE_ISEARCH: u32 = 128;
pub const RL_STATE_NSEARCH: u32 = 256;
pub const RL_STATE_SEARCH: u32 = 512;
pub const RL_STATE_NUMERICARG: u32 = 1024;
pub const RL_STATE_MACROINPUT: u32 = 2048;
pub const RL_STATE_MACRODEF: u32 = 4096;
pub const RL_STATE_OVERWRITE: u32 = 8192;
pub const RL_STATE_COMPLETING: u32 = 16384;
pub const RL_STATE_SIGHANDLER: u32 = 32768;
pub const RL_STATE_UNDOING: u32 = 65536;
pub const RL_STATE_INPUTPENDING: u32 = 131072;
pub const RL_STATE_TTYCSAVED: u32 = 262144;
pub const RL_STATE_CALLBACK: u32 = 524288;
pub const RL_STATE_VIMOTION: u32 = 1048576;
pub const RL_STATE_MULTIKEY: u32 = 2097152;
pub const RL_STATE_VICMDONCE: u32 = 4194304;
pub const RL_STATE_CHARSEARCH: u32 = 8388608;
pub const RL_STATE_REDISPLAYING: u32 = 16777216;
pub const RL_STATE_DONE: u32 = 33554432;
pub const RL_STATE_TIMEOUT: u32 = 67108864;
pub const RL_STATE_EOF: u32 = 134217728;
pub const HS_HISTORY_VERSION: u32 = 2050;
pub const HS_STIFLED: u32 = 1;
pub type rl_command_func_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
pub type rl_compentry_func_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char,
>;
pub type rl_completion_func_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
    ) -> *mut *mut ::std::os::raw::c_char,
>;
pub type rl_quote_func_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
        arg3: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char,
>;
pub type rl_dequote_func_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char,
>;
pub type rl_compignore_func_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int,
>;
pub type rl_compdisp_func_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut *mut ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
    ),
>;
pub type rl_hook_func_t =
    ::std::option::Option<unsafe extern "C" fn() -> ::std::os::raw::c_int>;
pub type rl_getc_func_t = ::std::option::Option<
    unsafe extern "C" fn(arg1: *mut FILE) -> ::std::os::raw::c_int,
>;
pub type rl_linebuf_func_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
pub type rl_icppfunc_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int,
>;
pub type rl_voidfunc_t = ::std::option::Option<unsafe extern "C" fn()>;
pub type rl_vintfunc_t =
    ::std::option::Option<unsafe extern "C" fn(arg1: ::std::os::raw::c_int)>;
pub type rl_vcpfunc_t = ::std::option::Option<
    unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_char),
>;
pub type rl_cpvfunc_t = ::std::option::Option<
    unsafe extern "C" fn() -> *mut ::std::os::raw::c_char,
>;
pub type Keymap = *mut KEYMAP_ENTRY;
pub const undo_code_UNDO_DELETE: undo_code = 0;
pub const undo_code_UNDO_INSERT: undo_code = 1;
pub const undo_code_UNDO_BEGIN: undo_code = 2;
pub const undo_code_UNDO_END: undo_code = 3;
pub type undo_code = ::std::os::raw::c_uint;
extern "C" {
    pub fn rl_digit_argument(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_universal_argument(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_forward_byte(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_forward_char(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_forward(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_backward_byte(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_backward_char(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_backward(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_beg_of_line(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_end_of_line(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_forward_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_backward_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_refresh_line(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_clear_screen(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_clear_display(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_skip_csi_sequence(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_arrow_keys(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_previous_screen_line(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_next_screen_line(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_insert(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_quoted_insert(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_tab_insert(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_newline(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_do_lowercase_version(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_rubout(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_delete(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_rubout_or_delete(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_delete_horizontal_space(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_delete_or_show_completions(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_insert_comment(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_upcase_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_downcase_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_capitalize_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_transpose_words(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_transpose_chars(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_char_search(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_backward_char_search(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_beginning_of_history(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_end_of_history(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_get_next_history(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_get_previous_history(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_operate_and_get_next(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_fetch_history(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_set_mark(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_exchange_point_and_mark(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_editing_mode(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_emacs_editing_mode(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_overwrite_mode(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_re_read_init_file(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_dump_functions(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_dump_macros(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_dump_variables(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_complete(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_possible_completions(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_insert_completions(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_old_menu_complete(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_menu_complete(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_backward_menu_complete(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_kill_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_backward_kill_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_kill_line(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_backward_kill_line(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_kill_full_line(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_unix_word_rubout(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_unix_filename_rubout(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_unix_line_discard(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_copy_region_to_kill(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_kill_region(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_copy_forward_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_copy_backward_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_yank(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_yank_pop(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_yank_nth_arg(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_yank_last_arg(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_bracketed_paste_begin(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_reverse_search_history(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_forward_search_history(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_start_kbd_macro(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_end_kbd_macro(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_call_last_kbd_macro(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_print_last_kbd_macro(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_revert_line(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_undo_command(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_tilde_expand(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_restart_output(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_stop_output(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_abort(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_tty_status(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_history_search_forward(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_history_search_backward(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_history_substr_search_forward(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_history_substr_search_backward(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_noninc_forward_search(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_noninc_reverse_search(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_noninc_forward_search_again(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_noninc_reverse_search_again(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_insert_close(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_callback_handler_install(
        arg1: *const ::std::os::raw::c_char,
        arg2: rl_vcpfunc_t,
    );
}
extern "C" {
    pub fn rl_callback_read_char();
}
extern "C" {
    pub fn rl_callback_handler_remove();
}
extern "C" {
    pub fn rl_callback_sigcleanup();
}
extern "C" {
    pub fn rl_vi_redo(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_undo(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_yank_arg(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_fetch_history(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_search_again(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_search(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_complete(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_tilde_expand(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_prev_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_next_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_end_word(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_insert_beg(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_append_mode(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_append_eol(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_eof_maybe(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_insertion_mode(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_insert_mode(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_movement_mode(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_arg_digit(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_change_case(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_put(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_column(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_delete_to(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_change_to(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_yank_to(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_yank_pop(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_rubout(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_delete(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_back_to_indent(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_unix_word_rubout(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_first_print(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_char_search(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_match(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_change_char(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_subst(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_overstrike(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_overstrike_delete(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_replace(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_set_mark(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_goto_mark(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_check() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_domove(
        arg1: ::std::os::raw::c_int,
        arg2: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_bracktype(
        arg1: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_start_inserting(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn rl_vi_fWord(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_bWord(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_eWord(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_fword(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_bword(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_vi_eword(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn readline(
        arg1: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_set_prompt(
        arg1: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_expand_prompt(
        arg1: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_initialize() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_discard_argument() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_add_defun(
        arg1: *const ::std::os::raw::c_char,
        arg2: rl_command_func_t,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_bind_key(
        arg1: ::std::os::raw::c_int,
        arg2: rl_command_func_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_bind_key_in_map(
        arg1: ::std::os::raw::c_int,
        arg2: rl_command_func_t,
        arg3: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_unbind_key(arg1: ::std::os::raw::c_int)
    -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_unbind_key_in_map(
        arg1: ::std::os::raw::c_int,
        arg2: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_bind_key_if_unbound(
        arg1: ::std::os::raw::c_int,
        arg2: rl_command_func_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_bind_key_if_unbound_in_map(
        arg1: ::std::os::raw::c_int,
        arg2: rl_command_func_t,
        arg3: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_unbind_function_in_map(
        arg1: rl_command_func_t,
        arg2: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_unbind_command_in_map(
        arg1: *const ::std::os::raw::c_char,
        arg2: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_bind_keyseq(
        arg1: *const ::std::os::raw::c_char,
        arg2: rl_command_func_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_bind_keyseq_in_map(
        arg1: *const ::std::os::raw::c_char,
        arg2: rl_command_func_t,
        arg3: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_bind_keyseq_if_unbound(
        arg1: *const ::std::os::raw::c_char,
        arg2: rl_command_func_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_bind_keyseq_if_unbound_in_map(
        arg1: *const ::std::os::raw::c_char,
        arg2: rl_command_func_t,
        arg3: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_generic_bind(
        arg1: ::std::os::raw::c_int,
        arg2: *const ::std::os::raw::c_char,
        arg3: *mut ::std::os::raw::c_char,
        arg4: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_variable_value(
        arg1: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_variable_bind(
        arg1: *const ::std::os::raw::c_char,
        arg2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_set_key(
        arg1: *const ::std::os::raw::c_char,
        arg2: rl_command_func_t,
        arg3: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_macro_bind(
        arg1: *const ::std::os::raw::c_char,
        arg2: *const ::std::os::raw::c_char,
        arg3: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_translate_keyseq(
        arg1: *const ::std::os::raw::c_char,
        arg2: *mut ::std::os::raw::c_char,
        arg3: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_untranslate_keyseq(
        arg1: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_named_function(
        arg1: *const ::std::os::raw::c_char,
    ) -> rl_command_func_t;
}
extern "C" {
    pub fn rl_function_of_keyseq(
        arg1: *const ::std::os::raw::c_char,
        arg2: Keymap,
        arg3: *mut ::std::os::raw::c_int,
    ) -> rl_command_func_t;
}
extern "C" {
    pub fn rl_function_of_keyseq_len(
        arg1: *const ::std::os::raw::c_char,
        arg2: usize,
        arg3: Keymap,
        arg4: *mut ::std::os::raw::c_int,
    ) -> rl_command_func_t;
}
extern "C" {
    pub fn rl_trim_arg_from_keyseq(
        arg1: *const ::std::os::raw::c_char,
        arg2: usize,
        arg3: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_list_funmap_names();
}
extern "C" {
    pub fn rl_invoking_keyseqs_in_map(
        arg1: rl_command_func_t,
        arg2: Keymap,
    ) -> *mut *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_invoking_keyseqs(
        arg1: rl_command_func_t,
    ) -> *mut *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_function_dumper(arg1: ::std::os::raw::c_int);
}
extern "C" {
    pub fn rl_macro_dumper(arg1: ::std::os::raw::c_int);
}
extern "C" {
    pub fn rl_variable_dumper(arg1: ::std::os::raw::c_int);
}
extern "C" {
    pub fn rl_read_init_file(
        arg1: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_parse_and_bind(
        arg1: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_make_bare_keymap() -> Keymap;
}
extern "C" {
    pub fn rl_empty_keymap(arg1: Keymap) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_copy_keymap(arg1: Keymap) -> Keymap;
}
extern "C" {
    pub fn rl_make_keymap() -> Keymap;
}
extern "C" {
    pub fn rl_discard_keymap(arg1: Keymap);
}
extern "C" {
    pub fn rl_free_keymap(arg1: Keymap);
}
extern "C" {
    pub fn rl_get_keymap_by_name(
        arg1: *const ::std::os::raw::c_char,
    ) -> Keymap;
}
extern "C" {
    pub fn rl_get_keymap_name(arg1: Keymap) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_set_keymap(arg1: Keymap);
}
extern "C" {
    pub fn rl_get_keymap() -> Keymap;
}
extern "C" {
    pub fn rl_set_keymap_name(
        arg1: *const ::std::os::raw::c_char,
        arg2: Keymap,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_set_keymap_from_edit_mode();
}
extern "C" {
    pub fn rl_get_keymap_name_from_edit_mode() -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_add_funmap_entry(
        arg1: *const ::std::os::raw::c_char,
        arg2: rl_command_func_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_funmap_names() -> *mut *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_initialize_funmap();
}
extern "C" {
    pub fn rl_push_macro_input(arg1: *mut ::std::os::raw::c_char);
}
extern "C" {
    pub fn rl_add_undo(
        arg1: undo_code,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn rl_free_undo_list();
}
extern "C" {
    pub fn rl_do_undo() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_begin_undo_group() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_end_undo_group() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_modifying(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_redisplay();
}
extern "C" {
    pub fn rl_on_new_line() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_on_new_line_with_prompt() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_forced_update_display() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_clear_visible_line() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_clear_message() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_reset_line_state() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_crlf() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_keep_mark_active();
}
extern "C" {
    pub fn rl_activate_mark();
}
extern "C" {
    pub fn rl_deactivate_mark();
}
extern "C" {
    pub fn rl_mark_active_p() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_message(
        arg1: *const ::std::os::raw::c_char,
        ...
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_show_char(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_character_len(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_redraw_prompt_last_line();
}
extern "C" {
    pub fn rl_save_prompt();
}
extern "C" {
    pub fn rl_restore_prompt();
}
extern "C" {
    pub fn rl_replace_line(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn rl_insert_text(
        arg1: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_delete_text(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_kill_text(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_copy_text(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_prep_terminal(arg1: ::std::os::raw::c_int);
}
extern "C" {
    pub fn rl_deprep_terminal();
}
extern "C" {
    pub fn rl_tty_set_default_bindings(arg1: Keymap);
}
extern "C" {
    pub fn rl_tty_unset_default_bindings(arg1: Keymap);
}
extern "C" {
    pub fn rl_tty_set_echoing(
        arg1: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_reset_terminal(
        arg1: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_resize_terminal();
}
extern "C" {
    pub fn rl_set_screen_size(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn rl_get_screen_size(
        arg1: *mut ::std::os::raw::c_int,
        arg2: *mut ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn rl_reset_screen_size();
}
extern "C" {
    pub fn rl_get_termcap(
        arg1: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_stuff_char(arg1: ::std::os::raw::c_int)
    -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_execute_next(
        arg1: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_clear_pending_input() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_read_key() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_getc(arg1: *mut FILE) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_set_keyboard_input_timeout(
        arg1: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_set_timeout(
        arg1: ::std::os::raw::c_uint,
        arg2: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_timeout_remaining(
        arg1: *mut ::std::os::raw::c_uint,
        arg2: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_extend_line_buffer(arg1: ::std::os::raw::c_int);
}
extern "C" {
    pub fn rl_ding() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_alphabetic(arg1: ::std::os::raw::c_int)
    -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_free(arg1: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn rl_set_signals() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_clear_signals() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_cleanup_after_signal();
}
extern "C" {
    pub fn rl_reset_after_signal();
}
extern "C" {
    pub fn rl_free_line_state();
}
extern "C" {
    pub fn rl_pending_signal() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_check_signals();
}
extern "C" {
    pub fn rl_echo_signal_char(arg1: ::std::os::raw::c_int);
}
extern "C" {
    pub fn rl_set_paren_blink_timeout(
        arg1: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_clear_history();
}
extern "C" {
    pub fn rl_maybe_save_line() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_maybe_unsave_line() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_maybe_replace_line() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_complete_internal(
        arg1: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_display_match_list(
        arg1: *mut *mut ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn rl_completion_matches(
        arg1: *const ::std::os::raw::c_char,
        arg2: rl_compentry_func_t,
    ) -> *mut *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_username_completion_function(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_filename_completion_function(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn rl_completion_mode(
        arg1: rl_command_func_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_library_version: *const ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_readline_version: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_gnu_readline_p: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_readline_state: ::std::os::raw::c_ulong;
}
extern "C" {
    pub static mut rl_editing_mode: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_insert_mode: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_readline_name: *const ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_prompt: *mut ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_display_prompt: *mut ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_line_buffer: *mut ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_point: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_end: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_mark: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_done: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_eof_found: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_pending_input: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_dispatching: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_explicit_arg: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_numeric_arg: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_last_func: rl_command_func_t;
}
extern "C" {
    pub static mut rl_terminal_name: *const ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_instream: *mut FILE;
}
extern "C" {
    pub static mut rl_outstream: *mut FILE;
}
extern "C" {
    pub static mut rl_prefer_env_winsize: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_startup_hook: rl_hook_func_t;
}
extern "C" {
    pub static mut rl_pre_input_hook: rl_hook_func_t;
}
extern "C" {
    pub static mut rl_event_hook: rl_hook_func_t;
}
extern "C" {
    pub static mut rl_signal_event_hook: rl_hook_func_t;
}
extern "C" {
    pub static mut rl_timeout_event_hook: rl_hook_func_t;
}
extern "C" {
    pub static mut rl_input_available_hook: rl_hook_func_t;
}
extern "C" {
    pub static mut rl_getc_function: rl_getc_func_t;
}
extern "C" {
    pub static mut rl_redisplay_function: rl_voidfunc_t;
}
extern "C" {
    pub static mut rl_prep_term_function: rl_vintfunc_t;
}
extern "C" {
    pub static mut rl_deprep_term_function: rl_voidfunc_t;
}
extern "C" {
    pub static mut rl_executing_keymap: Keymap;
}
extern "C" {
    pub static mut rl_binding_keymap: Keymap;
}
extern "C" {
    pub static mut rl_executing_key: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_executing_keyseq: *mut ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_key_sequence_length: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_erase_empty_line: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_already_prompted: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_num_chars_to_read: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_executing_macro: *mut ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_catch_signals: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_catch_sigwinch: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_change_environment: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_completion_entry_function: rl_compentry_func_t;
}
extern "C" {
    pub static mut rl_menu_completion_entry_function: rl_compentry_func_t;
}
extern "C" {
    pub static mut rl_ignore_some_completions_function: rl_compignore_func_t;
}
extern "C" {
    pub static mut rl_attempted_completion_function: rl_completion_func_t;
}
extern "C" {
    pub static mut rl_basic_word_break_characters:
        *const ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_completer_word_break_characters:
        *const ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_completion_word_break_hook: rl_cpvfunc_t;
}
extern "C" {
    pub static mut rl_completer_quote_characters:
        *const ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_basic_quote_characters: *const ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_filename_quote_characters: *const ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_special_prefixes: *const ::std::os::raw::c_char;
}
extern "C" {
    pub static mut rl_directory_completion_hook: rl_icppfunc_t;
}
extern "C" {
    pub static mut rl_directory_rewrite_hook: rl_icppfunc_t;
}
extern "C" {
    pub static mut rl_filename_stat_hook: rl_icppfunc_t;
}
extern "C" {
    pub static mut rl_filename_rewrite_hook: rl_dequote_func_t;
}
extern "C" {
    pub static mut rl_completion_display_matches_hook: rl_compdisp_func_t;
}
extern "C" {
    pub static mut rl_filename_completion_desired: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_filename_quoting_desired: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_filename_quoting_function: rl_quote_func_t;
}
extern "C" {
    pub static mut rl_filename_dequoting_function: rl_dequote_func_t;
}
extern "C" {
    pub static mut rl_char_is_quoted_p: rl_linebuf_func_t;
}
extern "C" {
    pub static mut rl_attempted_completion_over: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_completion_type: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_completion_invoking_key: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_completion_query_items: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_completion_append_character: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_completion_suppress_append: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_completion_quote_character: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_completion_found_quote: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_completion_suppress_quote: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_sort_completion_matches: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_completion_mark_symlink_dirs: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_ignore_completion_duplicates: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_inhibit_completion: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut rl_persistent_signal_handlers: ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_save_state(arg1: *mut readline_state) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn rl_restore_state(
        arg1: *mut readline_state,
    ) -> ::std::os::raw::c_int;
}
pub type histdata_t = *mut ::std::os::raw::c_void;
extern "C" {
    pub fn using_history();
}
extern "C" {
    pub fn history_get_history_state() -> *mut HISTORY_STATE;
}
extern "C" {
    pub fn history_set_history_state(arg1: *mut HISTORY_STATE);
}
extern "C" {
    pub fn add_history(arg1: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn add_history_time(arg1: *const ::std::os::raw::c_char);
}
extern "C" {
    pub fn remove_history(arg1: ::std::os::raw::c_int) -> *mut HIST_ENTRY;
}
extern "C" {
    pub fn remove_history_range(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
    ) -> *mut *mut HIST_ENTRY;
}
extern "C" {
    pub fn alloc_history_entry(
        arg1: *mut ::std::os::raw::c_char,
        arg2: *mut ::std::os::raw::c_char,
    ) -> *mut HIST_ENTRY;
}
extern "C" {
    pub fn copy_history_entry(arg1: *mut HIST_ENTRY) -> *mut HIST_ENTRY;
}
extern "C" {
    pub fn free_history_entry(arg1: *mut HIST_ENTRY) -> histdata_t;
}
extern "C" {
    pub fn replace_history_entry(
        arg1: ::std::os::raw::c_int,
        arg2: *const ::std::os::raw::c_char,
        arg3: histdata_t,
    ) -> *mut HIST_ENTRY;
}
extern "C" {
    pub fn clear_history();
}
extern "C" {
    pub fn stifle_history(arg1: ::std::os::raw::c_int);
}
extern "C" {
    pub fn unstifle_history() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn history_is_stifled() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn history_list() -> *mut *mut HIST_ENTRY;
}
extern "C" {
    pub fn where_history() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn current_history() -> *mut HIST_ENTRY;
}
extern "C" {
    pub fn history_get(arg1: ::std::os::raw::c_int) -> *mut HIST_ENTRY;
}
extern "C" {
    pub fn history_get_time(arg1: *mut HIST_ENTRY) -> time_t;
}
extern "C" {
    pub fn history_total_bytes() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn history_set_pos(
        arg1: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn previous_history() -> *mut HIST_ENTRY;
}
extern "C" {
    pub fn next_history() -> *mut HIST_ENTRY;
}
extern "C" {
    pub fn history_search(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn history_search_prefix(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn history_search_pos(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn read_history(
        arg1: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn read_history_range(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn write_history(
        arg1: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn append_history(
        arg1: ::std::os::raw::c_int,
        arg2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn history_truncate_file(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn history_expand(
        arg1: *mut ::std::os::raw::c_char,
        arg2: *mut *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn history_arg_extract(
        arg1: ::std::os::raw::c_int,
        arg2: ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn get_history_event(
        arg1: *const ::std::os::raw::c_char,
        arg2: *mut ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn history_tokenize(
        arg1: *const ::std::os::raw::c_char,
    ) -> *mut *mut ::std::os::raw::c_char;
}
extern "C" {
    pub static mut history_base: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut history_length: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut history_max_entries: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut history_offset: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut history_lines_read_from_file: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut history_lines_written_to_file: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut history_expansion_char: ::std::os::raw::c_char;
}
extern "C" {
    pub static mut history_subst_char: ::std::os::raw::c_char;
}
extern "C" {
    pub static mut history_word_delimiters: *mut ::std::os::raw::c_char;
}
extern "C" {
    pub static mut history_comment_char: ::std::os::raw::c_char;
}
extern "C" {
    pub static mut history_no_expand_chars: *mut ::std::os::raw::c_char;
}
extern "C" {
    pub static mut history_search_delimiter_chars: *mut ::std::os::raw::c_char;
}
extern "C" {
    pub static mut history_quotes_inhibit_expansion: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut history_quoting_state: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut history_write_timestamps: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut history_multiline_entries: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut history_file_version: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut max_input_history: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut history_inhibit_expansion_function: rl_linebuf_func_t;
}
